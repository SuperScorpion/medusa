#根包名 (必选)
medusa.packagePath = com.xxx.xxx

#需要生成的数据库里的表名称 以,分割 如果为空不写 则生成所有的表信息 (可选)
medusa.tableName = agents

#entity包名 (可选)
medusa.entitySuffix = entity

#service包名 (可选)
medusa.serviceSuffix = service

#serviceimpl包名 (可选)
medusa.serviceImplSuffix = service.impl

#mapper包名 (可选)
medusa.mapperSuffix = persistence

#xml包名 如果路径里存在classpath 则生成到resources里 (可选)
medusa.xmlSuffix = persistence.xml

#作者姓名 (可选)
medusa.author = monster

#是否生成baseService和baseServiceImpl 不写则是不生成 (可选)
medusa.baseServiceSwitch = yes

#是否根据模版来生成 如果不写则会使用内置代码方式生成(不建议) 如果不为空则使用该路径的模版 找不到该路径则使用默认的内置模版 (可选)
medusa.ftlDirPath = /xxx/xxx/xxx

#数据库的四个配置 (必选)
medusa.jdbc.driver = com.mysql.jdbc.Driver
medusa.jdbc.url = jdbc:mysql://localhost:3306/cms?useUnicode=true&characterEncoding=UTF-8
medusa.jdbc.username = root
medusa.jdbc.password =



###############以下为不常用配置项 可以忽略##############
#生成实体类时的后缀 (可选)
medusa.entityNameSuffix =
#是否用懒加载 非空则为true (可选)
medusa.lazyLoadSwitch =
#是否为entity里的类添加序列化的接口 非空则为true (可选)
medusa.entitySerializableSwitch =
#需要关联的字段名 (可选)
medusa.associationColumn = user_id
#级联表字段对应生成属性对象时后缀名 (可选)
medusa.pluralAssociation = s

###如果使用模版生成(配置了ftlDirPath选项) 则不需要下面三个配置
#返回json形式的controller包名 和下二选一 (可选)
medusa.controlJsonSuffix = controller
#返回页面形式的controller包名 和上二选一 (可选)
medusa.controlMortalSuffix =
#保留功能需要标记的自定义标签(暂时只支持内置代码生成模式) (可选)
medusa.tag = <

###验证生成时的json 暂不使用
#medusa.validator = {"validator" : [{"users" : [{"name" : "@Length(max = 89,min = 1)&@Validator(regExp = MyPattern.REGX_ALPHANUM)"},{"homeNo" : "@Length(max = 89,min = 1)&@Validator(regExp = MyPattern.REGX_ALPHANUM)"}]}] }
