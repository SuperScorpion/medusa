#根包名
medusa.packagePath = com.jy.xxx
#需要生成的数据库里的表名称 以,分割 如果为空不写 则生成所有的 表信息
medusa.tableName = agents

#entity包名
medusa.entitySuffix = entity
#service包名
medusa.serviceSuffix = service
#serviceimpl包名
medusa.serviceImplSuffix = service.impl
#mapper包名
medusa.mapperSuffix = persistence
#xml包名
medusa.xmlSuffix = persistence.xml
#classpath下的xml路径
medusa.classpathXml = classpath:/xml
#作者姓名
medusa.author = monster

#需要关联的字段名
medusa.associationColumn = user_id
#是否用懒加载
medusa.lazyLoad =
#是否生成baseService和baseServiceImpl
medusa.baseServiceSwitch =
#是否为entity里的类添加序列化的接口
medusa.entitySerializable =

#级联表字段对应生成属性对象时后缀名
medusa.pluralAssociation = s
#生成实体类时的后缀
medusa.entityNameSuffix =

#是否根据模版来生成 如果为空则会使用内置生成 如果不为空则使用模版 如果找不到该路径则使用默认的模版
medusa.ftlDirPath = xxx

###如果使用模版则不使用下面三个配置###

#json形式的controller包名 二选一
medusa.controlJsonSuffix = controller
#页面形式的controller包名 二选一
medusa.controlMortalSuffix =
#保留功能需要标记的自定义标签
medusa.tag = <

###验证生成时的json 暂不用###
#medusa.validator = {"validator" : [{"users" : [{"name" : "@Length(max = 89,min = 1)&@Validator(regExp = MyPattern.REGX_ALPHANUM)"},{"homeNo" : "@Length(max = 89,min = 1)&@Validator(regExp = MyPattern.REGX_ALPHANUM)"}]}] }

#数据库的四个配置
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url= jdbc:mysql://localhost:3306/cms?useUnicode=true&characterEncoding=UTF-8
jdbc.username=root
jdbc.password=
